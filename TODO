Implement halftoning in color editor.

In 8-bit PseudoColor mode, running fvwm95 and therefore limited to a 2x2x2
color cube, About looks solid black! WTF?!? (May need to open another window
and use color editor and color picker a bit before it starts to do this.)
Very odd, because according to xcmap, pixels 0 and 1 are black and white,
as always, and aren't those the only ones that FW uses when rendering un-
reduced bitmaps?
Happens with mwm too. Problem kicks in after playing with the color picker.
Suddenly FW can't render any bitmaps any more (Life is all black, too).

8-bit PseudoColor: if you turn priv_cmap on and then off while the color editor
is active, the latter gets messed up. Kinda like it never gets notified that it
needs to re-rended the XImage. Or maybe it just doesn't handle the notification
right. Maybe related to the issue above.

ColorPicker: when constraining HSL coordinates (the MotionNotify case), make
sure the actual screen coordinates (cross_[xy], slider_x) are also constrained!

Take another careful look at the colormap editor. It needs a tidy API for
the *Actions to control it by: changing the selection, changing color cell
values; CME should repaint as necessary (which it may not be; if using a
private colormap, repainting is only needed when the selection changes)
and select_cell() etc. should not appear in the Actions.

The new Newton and Polynomial plugins don't use the 'bands' setting yet.

Why does gif2tiff crash on newton.gif? Everybody else (fw itself, xv,
giftoppm, Mozilla, IE, WinJPEG, xpaint) seems to like it just fine.

In SaveImageDialog, using the 'type' menu tends to mess up input focus (you
can't set focus on a text field any more). Am I doing something wrong there, or
is this an OpenMotif 2.2.2 bug? Take a look at...

	http://www.motifdeveloper.com/tips/tip22.html
        http://www.motifdeveloper.com/tips/Motif22Review.pdf

In the Color Picker and Colormap Editor, the focus disappears at one point in
the tabbing sequence. Where does it go? And more importantly, how do we get it
to not do that? Also, in the colormap editor, the tabbing sequence is wrong.
(Which, BTW, would be fixed if only I could convince the rowcolumn widget to
lay out its children left-to-right first. It should be able to do that, no? Is
this an Open Motif bug? See above.)

The code that draws the color wheel in ColorPicker uses unhealthy amouts of
transcendental functions, and it is pathetically slow. Can't we fudge this with
some fast, limited-precision approximations for sqrt() and atan2()?

The SettingsDialog code should receive focus notifications, and invoke
PluginSettings::fieldChanged() immediately (if the field has, in fact,
changed!), rather than putting it all off until the ok() callback.
Also, PluginSettings::fieldChanged() should return a bool saying whether a
change is vetoed or not. If vetoed, the focus could return to the offending
field, or the offending field could be highlighted (e.g. red background), or
something along those lines. Also, the OK action should be prevented when a
field has an error. (Cancel should always be allowed.)

In paint_reduced(), the code for displaying 8-bit colormapped images when a
private colormap is in effect, is painfully slow. Finding the closest match for
a color within an arbitrary set of colors is the problem. The current
implementation is totally naive... Even if a brute-force search really can't be
avoided, that code still wants some optimizing.

Fix the tabbing order in SettingsDialog (should traverse the bit depth radio
buttons *before* the group of pushbuttons in the lower right corner). Is the
order currently governed by the order in which the widgets were added to the
container? May not be possible to change the order in which the widgets are
added to the container, because of the XmForm constraints... But the tabbing
order can be overridden using some resource. Check xmlgui if unsure; I seem to
remember doing just that right there.
